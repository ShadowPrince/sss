(ns sss.graphics.bitmap
  (:require [clojure.string :refer [split]]))

;; Bitmap - 2-level vector to put on canvas (simple sprite)

(defn bitmap [& rows]
  (map (fn [row]
         (if (and (string? row) ((set row) \:))
           (let [parts (split row #"\:")]
             (rest 
               (reduce
                 (fn [res part]
                   (cond 
                     (.startsWith part "`") 
                     (conj (rest res) (assoc (first res) :fg part))
                     (.startsWith part "~")
                     (conj (rest res) (assoc (first res) :bg part))
                     :else (conj res (assoc (first res) :ch part))
                     ))
                 [{}]
                 parts)))
           row))
       rows))

(defn char-at [bitmap x y]
  (let [row (nth bitmap y '())]
    (cond
      (coll? row) (nth row x nil)
      (string? row) (get row x))))

(defn rev [[& bitmap]]
  (vec (apply (partial map (fn [& args] (vec args))) bitmap)))
